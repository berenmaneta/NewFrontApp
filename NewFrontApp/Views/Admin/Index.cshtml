<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/assets/js/vendor/datatables/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="~/Content/assets/js/vendor/datatables/datatables.bootstrap.min.css">
<script src="~/Content/assets/js/vendor/datatables/js/jquery.dataTables.min.js"></script>
<script src="~/Content/assets/js/vendor/datatables/extensions/dataTables.bootstrap.js"></script>

<script>
    $(document).ready(function () {
        Carregar();

    });

    function Carregar() {
        $.ajax({
                url: '@Url.Action("GetProductsAPI", "Home")',
                type: "GET",
                contentType: "application/jon",
                success: function (result) {
                    debugger;
                    PreencherTable(result);
                },
                error: function (xhr, exception) {
                    alert("ERRO!");
                }
            });
    }

    function PreencherTable(data) {
        debugger;
        $('#editable-usage tr').not(':first').not(':last').remove();
        var html = '';
        for (var i = 0; i < data.length; i++)
            html += '<tr><td>' + data[i].Name + '</td><td>' + data[i].Description + '</td><td>' + data[i].Price + '</td><td class="actions"></td></tr>'
        $('#editable-usage tr').first().after(html);
    }



</script>

<section id="content" class="tile">

    <div class="tile-header dvd dvd-btm">
        <h1 class="custom-font"><strong>Products</strong></h1>
        <ul class="controls">
            <li>
                <a href='@Url.Action("InsertProduct", "Admin")' role="button" tabindex="0" id="add-entry"><i class="fa fa-plus mr-5"></i> Add Product</a>
            </li>
        </ul>
    </div>

    <div class="tile-body">
        <div class="table-responsive">
            <table class="table table-custom" id="editable-usage">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        @*<th>Category</th>
                            <th>SubCategory</th>*@
                        @*<th style="width: 160px;" class="no-sort">Actions</th>*@
                    </tr>
                </thead>
                <tbody>
                    <tr></tr>
                </tbody>
            </table>
        </div>
    </div>
    <!-- /tile body -->

</section>

<script>
    //initialize editable datatable

    function restoreRow(oTable, nRow) {
        var aData = oTable.row(nRow).data();
        var jqTds = $('>td', nRow);

        for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
            oTable.row(nRow).data(aData[i]);
        }

        oTable.draw();
    }

    function editRow(oTable, nRow) {
        var aData = oTable.row(nRow).data();
        var jqTds = $('>td', nRow);
        jqTds[0].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[0] + '">';
        jqTds[1].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[1] + '">';
        jqTds[2].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[2] + '">';
        jqTds[3].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[3] + '">';
        jqTds[4].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[4] + '">';
        jqTds[5].innerHTML = '<a role="button" tabindex="0" class="edit text-success text-uppercase text-strong text-sm mr-10">Save</a><a role="button" tabindex="0" class="cancel text-warning text-uppercase text-strong text-sm mr-10">Cancel</a>';
    }

    function saveRow(oTable, nRow) {
        var jqInputs = $('input', nRow);
        oTable.cell(nRow, 0).data(jqInputs[0].value);
        oTable.cell(nRow, 1).data(jqInputs[1].value);
        oTable.cell(nRow, 2).data(jqInputs[2].value);
        oTable.cell(nRow, 3).data(jqInputs[3].value);
        oTable.cell(nRow, 4).data(jqInputs[4].value);
        oTable.cell(nRow, 5).data('<a role="button" tabindex="0" class="edit text-primary text-uppercase text-strong text-sm mr-10">Edit</a><a role="button" tabindex="0" class="delete text-danger text-uppercase text-strong text-sm mr-10">Remove</a>');
        oTable.draw();
    }

    var table2 = $('#editable-usage');

    var oTable = $('#editable-usage').DataTable({
        "aoColumnDefs": [
            { 'bSortable': false, 'aTargets': ["no-sort"] }
        ]
    });

    var nEditing = null;
    var nNew = false;

    $('#add-entry').click(function (e) {
        e.preventDefault();

        if (nNew && nEditing) {
            if (confirm("Previous row is not saved yet. Save it ?")) {
                saveRow(oTable, nEditing); // save
                $(nEditing).find("td:first").html("Untitled");
                nEditing = null;
                nNew = false;

            } else {
                oTable.row(nEditing).remove().draw(); // cancel
                nEditing = null;
                nNew = false;

                return;
            }
        }

        var aiNew = oTable.row.add(['', '', '', '', '', '', '']).draw();
        var nRow = oTable.row(aiNew[0]).node();
        editRow(oTable, nRow);
        nEditing = nRow;
        nNew = true;
    });

    table2.on('click', '.delete', function (e) {
        e.preventDefault();

        if (confirm("Are you sure?") == false) {
            return;
        }

        var nRow = $(this).parents('tr')[0];
        oTable.row(nRow).remove().draw();
        alert("Deleted!");
    });

    table2.on('click', '.cancel', function (e) {
        e.preventDefault();
        if (nNew) {
            oTable.row(nEditing).remove().draw();
            nEditing = null;
            nNew = false;
        } else {
            restoreRow(oTable, nEditing);
            nEditing = null;
        }
    });

    table2.on('click', '.edit', function (e) {
        e.preventDefault();

        /* Get the row as a parent of the link that was clicked on */
        var nRow = $(this).parents('tr')[0];

        if (nEditing !== null && nEditing != nRow) {
            /* Currently editing - but not this row - restore the old before continuing to edit mode */
            restoreRow(oTable, nEditing);
            editRow(oTable, nRow);
            nEditing = nRow;
        } else if (nEditing == nRow && this.innerHTML == "Save") {
            /* Editing this row and want to save it */
            saveRow(oTable, nEditing);
            nEditing = null;
            alert("Updated!");
        } else {
            /* No edit in progress - let's start one */
            editRow(oTable, nRow);
            nEditing = nRow;
        }
    });
                //*initialize editable datatable


</script>